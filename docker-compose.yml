version: "3.9"

volumes:
  metrics_data:
  grafana_data:

services:
  db01:
    image: "${PG_IMAGE}"
    hostname: db01
    deploy:
      placement:
        constraints:
          - node.labels.db-host-01 == true
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=ru-RU --data-checksums"
      PGDATA: /pgdata
      DB_ROLE: primary
    volumes:
      - /docker-compose/pgdata-db01:/pgdata
      # https://github.com/compose-spec/compose-spec/blob/master/05-services.md#long-syntax-5
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 1073741824 # 2^30 bytes = 1Gb
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres'"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - postgres

  db02:
    image: "${PG_IMAGE}"
    hostname: db02
    entrypoint: replica-entrypoint.sh postgres
    deploy:
      placement:
        constraints:
          - node.labels.db-host-02 == true
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_INITDB_ARGS: "--locale-provider=icu --icu-locale=ru-RU --data-checksums"
      PGDATA: /pgdata
      DB_ROLE: secondary
      PRIMARY_HOST: db01
      # @see images/postgres/scripts/replica-entrypoint.sh
      # @see images/postgres/scripts/init.sh
      #REPLICA_SLOT: replica
    volumes:
      - /docker-compose/pgdata-db02:/pgdata
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          size: 1073741824 # 2^30 bytes = 1Gb
    depends_on:
      - db01
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U postgres'"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - postgres

  manage_db01:
    image: "${PG_IMAGE}"
    hostname: db01_manage
    entrypoint: tail -f /dev/null
    deploy:
      replicas: 0
      placement:
        constraints:
          - node.labels.db-host-01 == true
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: /pgdata
    volumes:
      - /docker-compose/pgdata-db01:/pgdata
    networks:
      - postgres

networks:
  monitoring:
  postgres:
    attachable: true
    ipam:
      driver: default
      config:
       # for pg_hba.conf @see images/postgres/scripts/init.sh
       - subnet: 10.0.9.0/26
